<?php

namespace Proxies\__CG__\App\Entity;


/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Quiz extends \App\Entity\Quiz implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Proxy\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Proxy\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array<string, null> properties to be lazy loaded, indexed by property name
     */
    public static $lazyPropertiesNames = array (
);

    /**
     * @var array<string, mixed> default values of properties to be lazy loaded, with keys being the property names
     *
     * @see \Doctrine\Common\Proxy\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array (
);



    public function __construct(?\Closure $initializer = null, ?\Closure $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', '' . "\0" . 'App\\Entity\\Quiz' . "\0" . 'id', '' . "\0" . 'App\\Entity\\Quiz' . "\0" . 'titre', '' . "\0" . 'App\\Entity\\Quiz' . "\0" . 'temp', '' . "\0" . 'App\\Entity\\Quiz' . "\0" . 'idQuestion', '' . "\0" . 'App\\Entity\\Quiz' . "\0" . 'evaluations', '' . "\0" . 'App\\Entity\\Quiz' . "\0" . 'nbquestion', '' . "\0" . 'App\\Entity\\Quiz' . "\0" . 'Chapter'];
        }

        return ['__isInitialized__', '' . "\0" . 'App\\Entity\\Quiz' . "\0" . 'id', '' . "\0" . 'App\\Entity\\Quiz' . "\0" . 'titre', '' . "\0" . 'App\\Entity\\Quiz' . "\0" . 'temp', '' . "\0" . 'App\\Entity\\Quiz' . "\0" . 'idQuestion', '' . "\0" . 'App\\Entity\\Quiz' . "\0" . 'evaluations', '' . "\0" . 'App\\Entity\\Quiz' . "\0" . 'nbquestion', '' . "\0" . 'App\\Entity\\Quiz' . "\0" . 'Chapter'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Quiz $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy::$lazyPropertiesDefaults as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load(): void
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized(): bool
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized): void
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(?\Closure $initializer = null): void
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer(): ?\Closure
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(?\Closure $cloner = null): void
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner(): ?\Closure
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @deprecated no longer in use - generated code now relies on internal components rather than generated public API
     * @static
     */
    public function __getLazyProperties(): array
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function __toString(): string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, '__toString', []);

        return parent::__toString();
    }

    /**
     * {@inheritDoc}
     */
    public function getId(): ?int
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function getTitre(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTitre', []);

        return parent::getTitre();
    }

    /**
     * {@inheritDoc}
     */
    public function setTitre(string $titre): static
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTitre', [$titre]);

        return parent::setTitre($titre);
    }

    /**
     * {@inheritDoc}
     */
    public function getTemp(): ?int
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTemp', []);

        return parent::getTemp();
    }

    /**
     * {@inheritDoc}
     */
    public function setTemp(int $temp): static
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTemp', [$temp]);

        return parent::setTemp($temp);
    }

    /**
     * {@inheritDoc}
     */
    public function getIdQuestion(): \Doctrine\Common\Collections\Collection
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIdQuestion', []);

        return parent::getIdQuestion();
    }

    /**
     * {@inheritDoc}
     */
    public function addIdQuestion(\App\Entity\Question $idQuestion): static
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addIdQuestion', [$idQuestion]);

        return parent::addIdQuestion($idQuestion);
    }

    /**
     * {@inheritDoc}
     */
    public function removeIdQuestion(\App\Entity\Question $idQuestion): static
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeIdQuestion', [$idQuestion]);

        return parent::removeIdQuestion($idQuestion);
    }

    /**
     * {@inheritDoc}
     */
    public function getEvaluations(): \Doctrine\Common\Collections\Collection
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEvaluations', []);

        return parent::getEvaluations();
    }

    /**
     * {@inheritDoc}
     */
    public function addEvaluation(\App\Entity\Evaluation $evaluation): static
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addEvaluation', [$evaluation]);

        return parent::addEvaluation($evaluation);
    }

    /**
     * {@inheritDoc}
     */
    public function removeEvaluation(\App\Entity\Evaluation $evaluation): static
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeEvaluation', [$evaluation]);

        return parent::removeEvaluation($evaluation);
    }

    /**
     * {@inheritDoc}
     */
    public function getNbquestion(): ?int
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getNbquestion', []);

        return parent::getNbquestion();
    }

    /**
     * {@inheritDoc}
     */
    public function setNbquestion(int $nbquestion): static
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setNbquestion', [$nbquestion]);

        return parent::setNbquestion($nbquestion);
    }

    /**
     * {@inheritDoc}
     */
    public function getChapter(): ?\App\Entity\Ressource
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getChapter', []);

        return parent::getChapter();
    }

    /**
     * {@inheritDoc}
     */
    public function setChapter(?\App\Entity\Ressource $Chapter): static
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setChapter', [$Chapter]);

        return parent::setChapter($Chapter);
    }

}
